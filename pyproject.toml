[tool.poetry]
name = "oida"
version = "0.1.4"
description = "Oida is Oda's linter that enforces code style and modularization in our Django projects."
authors = ["Oda <tech@oda.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/kolonialno/oida"
repository = "https://github.com/kolonialno/oida"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Framework :: Django",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.dependencies]
python = "^3.10"
libcst = "^0.4.3"
tomli = {version = ">=1.0.0", python = "<3.11"}

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
mypy = "^0.971"
flake8 = "^5.0.4"
pytest = "^7.1.2"
pep8-naming = "^0.13.0"
pytest-cov = "^3.0.0"
keepachangelog = "^1.0.0"

[tool.poetry.scripts]
oida = 'oida.console:main'

[tool.poetry.plugins."flake8.extension"]
ODA = "oida.flake8:Plugin"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "module(name, package, path, content): Define the module to run the checker on",
    "component_config(allowed_imports=..., allowed_foreign_keys...): Set component config",
    "project_files(file_mapping): Files to create in a temporary project directory",
    "pyproject_toml(contents): Define a pyproject.toml file to use for the project config",
]

[tool.isort]
profile = "black"
src_paths = ["oida", "test"]

[tool.mypy]
strict = true
python_version = "3.10"
show_error_codes = true
files = ["oida", "tests"]
